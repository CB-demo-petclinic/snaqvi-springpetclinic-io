apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Flag_deployement
on:
  push:
    branches:
      - master
jobs:
  Build:
    outputs:
      unitTestResults: ${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}
      commit_id: ${{ steps.commitinfo.outputs.commit_id }}
      commit_msg: ${{ steps.commitinfo.outputs.commit_msg }}
      jira_key: ${{ steps.commitinfo.outputs.jira_key }}
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit ID: $COMMIT_ID"
          echo "Commit Message: $COMMIT_MSG"
          # Extract the JIRA issue key (assuming format like PROJECTKEY-123)
          JIRA_KEY=$(echo "$COMMIT_MSG" | grep -oE "[A-Z]+-[0-9]+")
          if [ -z "$JIRA_KEY" ]; then
            echo "Error: Commit message must include a valid JIRA issue key." >&2
            exit 1
          fi
          echo "commit_id=${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "commit_msg=${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg
          echo "jira_key=${JIRA_KEY}" >> $CLOUDBEES_OUTPUTS/jira_key
      - uses: docker://maven:3-eclipse-temurin-17
        name: Build
        kind: build
        run: |
         mvn spring-javaformat:apply
         mvn clean install
        shell: sh

      - name: Verify Dockerfile location
        uses: docker://maven:3-eclipse-temurin-17
        run: ls -al ./
      
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.dockerurl }}
          username: ${{ secrets.dockerusername }}
          password: ${{ secrets.dockerpasswd }}
          
      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.dockerurl }}/${{ secrets.dockerusername }}/petclinic:3.2.4

  Deploy:
    needs: Build
    environment: production
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: cloudbees-io/kustomize-deploy@v1
        name: deploy
        kind: deploy
        with:
          kustomization-base-dir: ${{ cloudbees.workspace }}/base
          
